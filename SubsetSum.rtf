{\rtf1\ansi\ansicpg1252\cocoartf1561
{\fonttbl\f0\fmodern\fcharset0 CourierNewPS-BoldMT;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red10\green82\blue135;\red255\green255\blue255;\red0\green0\blue0;
\red217\green217\blue217;\red15\green114\blue1;\red18\green139\blue2;\red0\green0\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c40000\c60000;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c87843\c87843\c87843;\cssrgb\c0\c50980\c0;\cssrgb\c0\c60000\c0;\cssrgb\c0\c0\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl286\partightenfactor0

\f0\b\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 class
\f1\b0 \cf4 \strokec4  GFG \{ \
\'a0\'a0\'a0\'a0\'a0\'a0\
\pard\pardeftab720\sl286\partightenfactor0
\cf4 \cb5 \'a0\'a0\'a0\'a0\cf6 \strokec6 // Returns true if there is a subset \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\cf6 \strokec6 // of set[] with sum equal to given sum \cf4 \strokec4 \
\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 static
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 boolean
\f1\b0 \cf4 \strokec4  isSubsetSum(
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  set[], \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  n, 
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  sum) \
\'a0\'a0\'a0\'a0\{ \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf6 \strokec6 // Base Cases \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 if
\f1\b0 \cf4 \strokec4  (sum == \cf7 \strokec7 0\cf4 \strokec4 ) \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 return
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 true
\f1\b0 \cf4 \strokec4 ; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 if
\f1\b0 \cf4 \strokec4  (n == \cf7 \strokec7 0\cf4 \strokec4  && sum != \cf7 \strokec7 0\cf4 \strokec4 ) \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 return
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 false
\f1\b0 \cf4 \strokec4 ; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf6 \strokec6 // If last element is greater than\'a0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf6 \strokec6 // sum, then ignore it \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 if
\f1\b0 \cf4 \strokec4  (set[n-\cf7 \strokec7 1\cf4 \strokec4 ] > sum) \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 return
\f1\b0 \cf4 \strokec4  isSubsetSum(set, n-\cf7 \strokec7 1\cf4 \strokec4 , sum); \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf6 \strokec6 /* else, check if sum can be obtained\'a0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf6 \strokec6 by any of the following \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf6 \strokec6 (a) including the last element \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf6 \strokec6 (b) excluding the last element */\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 return
\f1\b0 \cf4 \strokec4  isSubsetSum(set, n-\cf7 \strokec7 1\cf4 \strokec4 , sum) ||\'a0 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0isSubsetSum(set, n-\cf7 \strokec7 1\cf4 \strokec4 , sum-set[n-\cf7 \strokec7 1\cf4 \strokec4 ]); \
\'a0\'a0\'a0\'a0\} \
\pard\pardeftab720\sl286\partightenfactor0
\cf4 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf6 \strokec6 /* Driver program to test above function */\cf4 \strokec4 \
\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 public
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 static
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 void
\f1\b0 \cf4 \strokec4  main (String args[]) \
\'a0\'a0\'a0\'a0\{ \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  set[] = \{\cf7 \strokec7 3\cf4 \strokec4 , \cf7 \strokec7 34\cf4 \strokec4 , \cf7 \strokec7 4\cf4 \strokec4 , \cf7 \strokec7 12\cf4 \strokec4 , \cf7 \strokec7 5\cf4 \strokec4 , \cf7 \strokec7 2\cf4 \strokec4 \}; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  sum = \cf7 \strokec7 9\cf4 \strokec4 ; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  n = set.length; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 if
\f1\b0 \cf4 \strokec4  (isSubsetSum(set, n, sum) == 
\f0\b \cf2 \strokec2 true
\f1\b0 \cf4 \strokec4 ) \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0System.out.println(\cf8 \strokec8 "Found a subset"\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0+ \cf8 \strokec8 " with given sum"\cf4 \strokec4 ); \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 else
\f1\b0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0System.out.println(\cf8 \strokec8 "No subset with"\cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0+ \cf8 \strokec8 " given sum"\cf4 \strokec4 ); \
\'a0\'a0\'a0\'a0\} \
\} \
\'a0\'a0\
}