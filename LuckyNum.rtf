{\rtf1\ansi\ansicpg1252\cocoartf1561
{\fonttbl\f0\fmodern\fcharset0 CourierNewPS-BoldMT;\f1\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red10\green82\blue135;\red255\green255\blue255;\red0\green0\blue0;
\red18\green139\blue2;\red217\green217\blue217;\red15\green114\blue1;\red0\green0\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c40000\c60000;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c0\c60000\c0;\cssrgb\c87843\c87843\c87843;\cssrgb\c0\c50980\c0;\cssrgb\c0\c0\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl286\partightenfactor0

\f0\b\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import
\f1\b0 \cf4 \strokec4  java.io.*; \
\'a0\'a0\

\f0\b \cf2 \strokec2 class
\f1\b0 \cf4 \strokec4  GFG\'a0 \
\{ \
\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 public
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 static
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  counter = \cf5 \strokec5 2\cf4 \strokec4 ;\'a0\'a0\'a0\'a0 \
\'a0\'a0\
\pard\pardeftab720\sl286\partightenfactor0
\cf4 \cb6 \'a0\'a0\'a0\'a0\cf7 \strokec7 // Returns 1 if n is a lucky no. ohterwise returns 0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 static
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 boolean
\f1\b0 \cf4 \strokec4  isLucky(
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  n) \
\'a0\'a0\'a0\'a0\{ \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // variable next_position is just for readability of \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // the program we can remove it and use n only\'a0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  next_position = n; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 if
\f1\b0 \cf4 \strokec4 (counter > n) \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 return
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 true
\f1\b0 \cf4 \strokec4 ; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 if
\f1\b0 \cf4 \strokec4 (n%counter == \cf5 \strokec5 0\cf4 \strokec4 ) \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 return
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 false
\f1\b0 \cf4 \strokec4 ;\'a0\'a0\'a0\'a0\'a0\'a0 \
\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf7 \strokec7 // calculate next position of input no \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0next_position -= next_position/counter; \
\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0counter++; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 return
\f1\b0 \cf4 \strokec4  isLucky(next_position); \
\'a0\'a0\'a0\'a0\} \
\pard\pardeftab720\sl286\partightenfactor0
\cf4 \cb3 \'a0\'a0\'a0\'a0\'a0\'a0\
\'a0\'a0\'a0\'a0\cf7 \strokec7 // driver program \cf4 \strokec4 \
\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 public
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 static
\f1\b0 \cf4 \strokec4  
\f0\b \cf2 \strokec2 void
\f1\b0 \cf4 \strokec4  main (String[] args)\'a0 \
\'a0\'a0\'a0\'a0\{ \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 int
\f1\b0 \cf4 \strokec4  x = \cf5 \strokec5 5\cf4 \strokec4 ; \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 if
\f1\b0 \cf4 \strokec4 ( isLucky(x) ) \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0System.out.println(x+\cf8 \strokec8 " is a lucky no."\cf4 \strokec4 ); \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0
\f0\b \cf2 \strokec2 else
\f1\b0 \cf4 \strokec4 \
\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0System.out.println(x+\cf8 \strokec8 " is not a lucky no."\cf4 \strokec4 ); \
\'a0\'a0\'a0\'a0\} \
\} \
}